{"version":3,"sources":["shared/context/auth-context.js","shared/components/UIElements/LoadingSpinner.js","shared/components/UIElements/Backdrop.js","shared/hooks/auth-hook.js","shared/components/Navigation/MainHeader.js","shared/components/Navigation/NavLinks.js","shared/components/Navigation/SideDrawer.js","shared/components/Navigation/MainNavigation.js","App.js","index.js"],"names":["AuthContext","createContext","isLoggedIn","userID","token","login","logout","LoadingSpinner","props","className","asOverlay","Backdrop","ReactDOM","createPortal","onClick","document","getElementById","logoutTimer","MainHeader","children","NavLinks","auth","useContext","to","exact","userId","SideDrawer","content","CSSTransition","in","show","timeout","classNames","mountOnEnter","unmountOnExit","MainNavigation","useState","drawerIsOpen","setDrawerIsOpen","closeDrawerHandler","Fragment","Users","React","lazy","NewPlace","UserPlaces","UpdatePlace","Auth","App","routes","setToken","tokenExpirationDate","setTokenExpirationDate","setUserId","useCallback","uid","expirationDate","tokenExpDate","Date","getTime","localStorage","setItem","JSON","stringify","expiration","toISOString","removeItem","useEffect","remainingTime","setTimeout","clearTimeout","storedData","parse","getItem","useAuth","path","Provider","value","fallback","render"],"mappings":"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","file":"static/js/main.0ab7867f.chunk.js","sourcesContent":["import { createContext } from \"react\";\r\n\r\nexport const AuthContext = createContext({\r\n  isLoggedIn: false,\r\n  userID: null,\r\n  token: null,\r\n  login: () => {},\r\n  logout: () => {}\r\n});\r\n","import React from 'react';\r\n\r\nimport './LoadingSpinner.css';\r\n\r\nconst LoadingSpinner = props => {\r\n  return (\r\n    <div className={`${props.asOverlay && 'loading-spinner__overlay'}`}>\r\n      <div className=\"lds-dual-ring\"></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoadingSpinner;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport './Backdrop.css';\r\n\r\nconst Backdrop = props => {\r\n  return ReactDOM.createPortal(\r\n    <div className=\"backdrop\" onClick={props.onClick}></div>,\r\n    document.getElementById('backdrop-hook')\r\n  );\r\n};\r\n\r\nexport default Backdrop;\r\n","import { useState, useCallback, useEffect } from \"react\";\r\n\r\n\r\nlet logoutTimer\r\nexport const useAuth = () => {\r\n  const [token, setToken] = useState(false);\r\n  const [tokenExpirationDate, setTokenExpirationDate] = useState();\r\n  const [userId, setUserId] = useState(false);\r\n\r\n  const login = useCallback((uid, token, expirationDate) => {\r\n    setToken(token);\r\n    setUserId(uid);\r\n    const tokenExpDate =\r\n      expirationDate || new Date(new Date().getTime() + 1000 * 60 * 60);\r\n    setTokenExpirationDate(tokenExpDate);\r\n    localStorage.setItem(\r\n      \"userData\",\r\n      JSON.stringify({\r\n        userId: uid,\r\n        token: token,\r\n        expiration: tokenExpDate.toISOString(),\r\n      })\r\n    );\r\n  }, []);\r\n\r\n  const logout = useCallback(() => {\r\n    setToken(null);\r\n    setTokenExpirationDate(null);\r\n    setUserId(null);\r\n    localStorage.removeItem(\"userData\");\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (token && tokenExpirationDate) {\r\n      const remainingTime =\r\n        tokenExpirationDate.getTime() - new Date().getTime();\r\n      logoutTimer = setTimeout(logout, remainingTime);\r\n    } else {\r\n      clearTimeout(logoutTimer);\r\n    }\r\n  }, [token, logout, tokenExpirationDate]);\r\n\r\n  useEffect(() => {\r\n    const storedData = JSON.parse(localStorage.getItem(\"userData\"));\r\n    if (\r\n      storedData &&\r\n      storedData.token &&\r\n      new Date(storedData.expiration) > new Date()\r\n    ) {\r\n      login(\r\n        storedData.userId,\r\n        storedData.token,\r\n        new Date(storedData.expiration)\r\n      );\r\n    }\r\n  }, [login]);\r\n\r\n  return {token, login, logout, userId}\r\n};\r\n","import React from \"react\";\r\n\r\nimport \"./MainHeader.css\";\r\n\r\nconst MainHeader = (props) => {\r\n  return <header className=\"main-header\">{props.children}</header>;\r\n};\r\n\r\nexport default MainHeader;\r\n","// import React, { useContext } from \"react\";\r\n// import { NavLink } from \"react-router-dom\";\r\n\r\n// import \"./NavLinks.css\";\r\n// import { AuthContext } from \"../../context/auth-context\";\r\n\r\n// const NavLinks = (props) => {\r\n//   const auth = useContext(AuthContext);\r\n\r\n//   return (\r\n//     <ul className=\"nav-links\">\r\n//       <li>\r\n//         <NavLink to=\"/\" exact>\r\n//           All Users\r\n//         </NavLink>\r\n//       </li>\r\n//       {auth.isLoggedIn && (\r\n//         <li>\r\n//           <NavLink to={`/${auth.userID}/places`}>My Places</NavLink>\r\n//         </li>\r\n//       )}\r\n//       {auth.isLoggedIn && (\r\n//         <li>\r\n//           <NavLink to=\"/places/new\">Add Places</NavLink>\r\n//         </li>\r\n//       )}\r\n//       {!auth.isLoggedIn && (\r\n//         <li>\r\n//           <NavLink to=\"/auth\">Authenticate</NavLink>\r\n//         </li>\r\n//       )}\r\n//       {auth.isLoggedIn && (\r\n//         <li>\r\n//           <button onClick={auth.logout}>LOGOUT</button>\r\n//         </li>\r\n//       )}\r\n//     </ul>\r\n//   );\r\n// };\r\n\r\n// export default NavLinks;\r\n\r\nimport React, { useContext } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport { AuthContext } from '../../context/auth-context';\r\nimport './NavLinks.css';\r\n\r\nconst NavLinks = props => {\r\n  const auth = useContext(AuthContext);\r\n\r\n  return (\r\n    <ul className=\"nav-links\">\r\n      <li>\r\n        <NavLink to=\"/\" exact>\r\n          ALL USERS\r\n        </NavLink>\r\n      </li>\r\n      {auth.isLoggedIn && (\r\n        <li>\r\n          <NavLink to={`/${auth.userId}/places`}>MY PLACES</NavLink>\r\n        </li>\r\n      )}\r\n      {auth.isLoggedIn && (\r\n        <li>\r\n          <NavLink to=\"/places/new\">ADD PLACE</NavLink>\r\n        </li>\r\n      )}\r\n      {!auth.isLoggedIn && (\r\n        <li>\r\n          <NavLink to=\"/auth\">AUTHENTICATE</NavLink>\r\n        </li>\r\n      )}\r\n      {auth.isLoggedIn && (\r\n        <li>\r\n          <button onClick={auth.logout}>LOGOUT</button>\r\n        </li>\r\n      )}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default NavLinks;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\n\r\nimport \"./SideDrawer.css\";\r\n\r\nconst SideDrawer = (props) => {\r\n  const content = (\r\n    <CSSTransition in={props.show} timeout={200} classNames=\"slide-in-left\" mountOnEnter unmountOnExit>\r\n      <aside className=\"side-drawer\" onClick={props.onClick}>{props.children}</aside>\r\n    </CSSTransition>\r\n  );\r\n\r\n  return ReactDOM.createPortal(content, document.getElementById(\"drawer-hook\"));\r\n};\r\n\r\nexport default SideDrawer;\r\n","import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport MainHeader from \"./MainHeader\";\r\nimport \"./MainNavigation.css\";\r\nimport NavLinks from \"./NavLinks\";\r\nimport SideDrawer from \"./SideDrawer\";\r\nimport Backdrop from \"../UIElements/Backdrop\";\r\n\r\nconst MainNavigation = (props) => {\r\n  const [drawerIsOpen, setDrawerIsOpen] = useState(false);\r\n\r\n  const openDrawerHandler = () => {\r\n    setDrawerIsOpen(true);\r\n  };\r\n\r\n  const closeDrawerHandler = () => {\r\n    setDrawerIsOpen(false);\r\n  };\r\n\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {drawerIsOpen && <Backdrop onClick={closeDrawerHandler} />}\r\n\r\n      <SideDrawer show={drawerIsOpen} onClick={closeDrawerHandler}>\r\n        <nav className=\"main-navigation__drawer-nav\">\r\n          <NavLinks />\r\n        </nav>\r\n      </SideDrawer>\r\n\r\n      <MainHeader>\r\n        <button className=\"main-navigation__menu-btn\" onClick={openDrawerHandler}>\r\n          <span />\r\n          <span />\r\n          <span />\r\n        </button>\r\n        <h1 className=\"main-navigation__title\">\r\n          <Link to=\"/\"> YourPlaces</Link>\r\n        </h1>\r\n        <nav className=\"main-navigation__header-nav\">\r\n          <NavLinks />\r\n        </nav>\r\n      </MainHeader>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default MainNavigation;\r\n","import React, { Suspense } from \"react\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Redirect,\n  Switch,\n} from \"react-router-dom\";\n\n// import Users from \"./user/pages/Users\";\n// import NewPlace from \"./places/pages/NewPlace\";\n// import UserPlaces from \"./places/pages/UserPlaces\";\n// import UpdatePlace from \"./places/pages/UpdatePlace\";\nimport MainNavigation from \"./shared/components/Navigation/MainNavigation\";\nimport LoadingSpinner from \"./shared/components/UIElements/LoadingSpinner\";\n// import Auth from \"./user/pages/Auth\";\nimport { AuthContext } from \"./shared/context/auth-context\";\nimport { useAuth } from \"./shared/hooks/auth-hook\";\n\nconst Users = React.lazy(() => import(\"./user/pages/Users\"));\nconst NewPlace = React.lazy(() => import(\"./places/pages/NewPlace\"));\nconst UserPlaces = React.lazy(() => import(\"./places/pages/UserPlaces\"));\nconst UpdatePlace = React.lazy(() => import(\"./places/pages/UpdatePlace\"));\nconst Auth = React.lazy(() => import(\"./user/pages/Auth\"));\n\nconst App = () => {\n  const { token, login, logout, userId } = useAuth();\n\n  let routes;\n\n  if (token) {\n    routes = (\n      <Switch>\n        <Route path=\"/\" exact>\n          <Users />\n        </Route>\n        <Route path=\"/:userID/places\" exact>\n          <UserPlaces />\n        </Route>\n        <Route path=\"/places/new\" exact>\n          <NewPlace />\n        </Route>\n        <Route path=\"/places/:placeId\" exact>\n          <UpdatePlace />\n        </Route>\n        <Redirect to=\"/\" />\n      </Switch>\n    );\n  } else {\n    routes = (\n      <Switch>\n        <Route path=\"/\" exact>\n          <Users />\n        </Route>\n        <Route path=\"/:userID/places\" exact>\n          <UserPlaces />\n        </Route>\n        <Route path=\"/auth\">\n          <Auth />\n        </Route>\n        <Redirect to=\"/auth\" />\n      </Switch>\n    );\n  }\n\n  return (\n    <AuthContext.Provider\n      value={{\n        isLoggedIn: !!token,\n        token: token,\n        userId: userId,\n        login: login,\n        logout: logout,\n      }}\n    >\n      <Router>\n        <MainNavigation />\n        <main>\n          <Suspense\n            fallback={\n              <div className=\"center\">\n                <LoadingSpinner />\n              </div>\n            }\n          >\n            {routes}\n          </Suspense>\n        </main>\n      </Router>\n    </AuthContext.Provider>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}